<?php
# This file was automatically generated by the MediaWiki 1.27.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings


/*
Bauhaus University Medien Wiki
Configured by:
Hasibullah Sahibzada  (hasibullah@sahibzada.org)
*/


# uncomment to see errors in detail
#error_reporting( E_ALL );
#ini_set( 'display_errors', 1 );


################################ Media Wiki Settings ################################

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;
$wgSitename 		= "Medien Wiki";
$wgMetaNamespace 	= "Media_Wiki";


## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
$wgScriptPath 		= "/kunst-und-gestaltung/wiki";
$wgArticlePath		= "{$wgScriptPath}/$1";
$wgScriptExtension 	= ".php";

## The protocol and server name to use in fully-qualified URLs
$wgServer 			= "https://www.uni-weimar.de";


$wgDebugLogFile  = "wgScriptPath/debug.log";


## The relative URL path to the skins directory
$wgStylePath 		= "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo 			= "$wgStylePath/common/images/wiki.png";


################################ Private Configuration ################################
# read the file bellow
require_once( "$IP/private.php" );

################################ Extension Installations ################################
# read the file bellow
require_once( "$IP/extensions.php" );


################################ Email Configuration ################################

## UPO means: this is also a user preference option
$wgEnableEmail 		= true;
$wgEnableUserEmail 	= true; # UPO

$ceAllowConfirmedEmail = true;


$wgCheckEmailAddressDomainSources = array(
	'type'  => CEASRC_FILE,
	'src'   => "$IP/Blacklist.txt"
);
$wgCheckEmailAddressNameSigns = array(
	array(
		'sign'          => ".",
		'maxcount'      => 5,
	),
);


# Email Domain Check
$wgEmailDomain = array("uni-weimar.de");

################################ Media Wiki Contact person ################################

$wgEmergencyContact 		= "mindaugas.gapsevicius@uni-weimar.de";
$wgPasswordSender 			= "mindaugas.gapsevicius@uni-weimar.de";

$wgEnotifUserTalk 			= true; # UPO
$wgEnotifWatchlist 			= true; # UPO
$wgEmailAuthentication 		= true;
$wgEmailConfirmToEdit  		= true;

################################ Image and File Settings ################################

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads 				= true;
$wgUseImageMagick 				= true;
$wgImageMagickConvertCommand 	= "/usr/bin/convert";

$wgResponsiveImages 			= false;

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons 			= false;


/* Zip files and other files that can compromise the security of your site
 are not permitted by default. One way of avoiding the checks that inhibit uploading is to set:
 However, this is a bit of a risk if someone chooses to upload a nasty file.*/
$wgVerifyMimeType 				= false;
$wgAllowExternalImages 			= true;
$wgMaxUploadSize 				= 1024 * 1024 * 5;


# Set this to true if you want detailed copyright information forms on Upload.
$wgUseCopyrightUpload 			= true;
# Set this to false if you want to disable checking that detailed
$wgCheckCopyrightUpload 		= true;


# File Drag and drop feature 
$wgEnableWriteAPI 				= true;


// bellow solves problem with Office 2007 and newer files (docx, xlsx, etc.)
$wgAllowJavaUploads 			= true; 

# Should the drag & drop area be shown? (Not set by default)
$wgMSU_useDragDrop 				= true; 

#If above true, files uploaded while editing a category will be added to that category
$wgMSU_showAutoCat 				= true;



/* If you use ImageMagick (or any other shell command) on a
 Linux server, this will need to be set to the name of an
 available UTF-8 locale

 If you want to use image uploads under safe mode,
 create the directories images/archive, images/thumb and
 images/temp, and make them all writable. Then uncomment
 this, if it's not already uncommented: */
$wgHashedUploadDirectory 		= false;


# Additionally allowed file extensions for uploads
$wgFileExtensions = array('png','gif','jpg','jpeg','doc','xls','pdf','ppt','tiff','bmp','docx','xlsx','pptx','aac','asc','csv','fla','gpx','igc','kml','kmz','maxpat','mobileconfig','mp3','pd','pde','pds','rte','rtf','svg','swf','trl','txt','wpt','zip');




################################ Namespace Settings ################################

# namespaces
#Number 100 and beyond are reserved for custom namespaces;
define("BUW_GMU", 100);
define("BUW_GMU_TALK", 101);
define("BUW_IFD", 102);
define("BUW_IFD_TALK", 103);
define("BUW_MODEN", 104);
define("BUW_MODEN_TALK", 105);
define("BUW_RADIO", 106);
define("BUW_RADIO_TALK", 107);
define("BUW_FOTO", 108);
define("BUW_FOTO_TALK", 109);
define("BUW_ME", 110);
define("BUW_ME_TALK", 111);
define("BUW_EXPTV", 112);
define("BUW_EXPTV_TALK", 113);
define("BUW_EKK", 114);
define("BUW_EKK_TALK", 115);
define("PDCON", 116);
define("PDCON_TALK", 117);
define("BUW_MME", 118);
define("BUW_MME_TALK", 119);
define("BUW_IMM", 120);
define("BUW_IMM_TALK", 121);

$wgExtraNamespaces[BUW_GMU] 			= "GMU";
$wgExtraNamespaces[BUW_GMU_TALK] 		= "GMU_talk";
$wgExtraNamespaces[BUW_IFD] 			= "IFD";
$wgExtraNamespaces[BUW_IFD_TALK] 		= "IFD_talk";
$wgExtraNamespaces[BUW_MODEN] 			= "MODEN";
$wgExtraNamespaces[BUW_MODEN_TALK] 		= "MODEN_talk";
$wgExtraNamespaces[BUW_RADIO] 			= "RADIO";
$wgExtraNamespaces[BUW_RADIO_TALK] 		= "RADIO_talk";
$wgExtraNamespaces[BUW_FOTO]			= "FOTO";
$wgExtraNamespaces[BUW_FOTO_TALK]		= "FOTO_talk";
$wgExtraNamespaces[BUW_ME]				= "ME";
$wgExtraNamespaces[BUW_ME_TALK]			= "ME_talk";
$wgExtraNamespaces[BUW_EXPTV]			= "EXPTV";
$wgExtraNamespaces[BUW_EXPTV_TALK]		= "EXPTV_talk";
$wgExtraNamespaces[BUW_EKK]				= "EKK";
$wgExtraNamespaces[BUW_EKK_TALK]		= "EKK_talk";
$wgExtraNamespaces[BUW_MME]				= "MME";
$wgExtraNamespaces[BUW_MME_TALK]		= "MME_talk";
$wgExtraNamespaces[BUW_IMM]				= "IMM";
$wgExtraNamespaces[BUW_IMM_TALK]		= "IMM_talk";
$wgExtraNamespaces[PDCON]				= "PDCON";
$wgExtraNamespaces[PDCON_TALK]			= "PDCON_talk";

# Enable subpages in the main namespace
$wgNamespacesWithSubpages[NS_MAIN] = true;

# Enable subpages all other namespaces
$wgNamespacesWithSubpages[BUW_GMU] 	 	= true;
$wgNamespacesWithSubpages[BUW_IFD] 	 	= true;
$wgNamespacesWithSubpages[BUW_MODEN] 	= true;
$wgNamespacesWithSubpages[BUW_RADIO] 	= true;
$wgNamespacesWithSubpages[BUW_FOTO]	 	= true;
$wgNamespacesWithSubpages[BUW_ME]	 	= true;
$wgNamespacesWithSubpages[BUW_EXPTV] 	= true;
$wgNamespacesWithSubpages[BUW_EKK]	 	= true;
$wgNamespacesWithSubpages[BUW_MME]	 	= true;
$wgNamespacesWithSubpages[BUW_IMM]	 	= true;
$wgNamespacesWithSubpages[PDCON]	 	= true;

#permission editbuwmk required
#$wgNamespaceProtection[BUW_MK] 		= array( 'editbuwmk' ); 

#Set default searching, see http://www.mediawiki.org/wiki/Manual:$wgNamespacesToBeSearchedDefault
$wgNamespacesToBeSearchedDefault 		= array(
	NS_MAIN =>          	true,
	NS_TALK =>          	false,
	NS_USER =>          	true,
	NS_USER_TALK =>     	false,
	NS_PROJECT =>			true,
	NS_PROJECT_TALK =>		false,
	NS_IMAGE =>         	true,
	NS_IMAGE_TALK =>    	false,
	NS_MEDIAWIKI =>      	true,
	NS_MEDIAWIKI_TALK => 	false,
	NS_TEMPLATE => 			false,
	NS_TEMPLATE_TALK => 	false,
	NS_HELP =>           	true,
	NS_HELP_TALK =>      	true,
	NS_CATEGORY =>       	true,
	NS_CATEGORY_TALK =>  	false,
	BUW_GMU => 				true,
	BUW_GMU_TALK =>			false,
	BUW_IFD => 				true,
	BUW_IFD_TALK =>			false,
	BUW_MODEN => 			true,
	BUW_MODEN_TALK =>		false,
	BUW_RADIO => 			true,
	BUW_RADIO_TALK =>		false,
	BUW_FOTO =>				true,
	BUW_FOTO_TALK =>		false,
	BUW_ME =>				true,
	BUW_ME_TALK =>			false,
	BUW_EXPTV =>			true,
	BUW_EXPTV_TALK =>		false,
	BUW_EKK =>				true,
	BUW_EKK_TALK =>			false,
	BUW_MME =>				true,
	BUW_MME_TALK =>			false,
	BUW_IMM =>				true,
	BUW_IMM_TALK =>			false,
	PDCON =>				true,
	PDCON_TALK =>			false
);


# Category Suggest
#require_once( "{$IP}/extensions/SelectCategoryTagCloud/SelectCategoryTagCloud.php" );
$wgSelectCategoryNamespaces[NS_TEMPLATE] = false;
$wgSelectCategoryNamespaces[BUW_GMU] 	 = true;
$wgSelectCategoryNamespaces[BUW_IFD] 	 = true;
$wgSelectCategoryNamespaces[BUW_MODEN] 	 = true;
$wgSelectCategoryNamespaces[BUW_RADIO] 	 = true;
$wgSelectCategoryNamespaces[BUW_FOTO]	 = true;
$wgSelectCategoryNamespaces[BUW_ME]		 = true;
$wgSelectCategoryNamespaces[BUW_EXPTV]	 = true;
$wgSelectCategoryNamespaces[BUW_EKK]	 = true;
$wgSelectCategoryNamespaces[BUW_MME]	 = true;
$wgSelectCategoryNamespaces[BUW_IMM]	 = true;
$wgSelectCategoryNamespaces[PDCON]		 = true;
$wgSelectCategoryEnableSubpages 		 = true;



################################ Skin configuration ################################

# Load bootstrap configuration file that has Bootstrap, CSS, JQuery and Javascript files. 
require_once( "$IP/skins/Bauhaus/bootstrapconfigurations.php" );


# Load the defaul skin which has super classes that other bellow skins inheret from
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmedienwiki.skin.php" );


# Load other thems that is extended from the super classes of Bauhausmedienwiki skin
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmediengmu.skin.php" );
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmedienradio.skin.php" );
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmedienpdcon.skin.php" );
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmedienmoden.skin.php" );
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmedienmme.skin.php" );
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmedienimm.skin.php" );
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmedienme.skin.php" );
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmedienkk.skin.php" );
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmedienifd.skin.php" );
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmedienfoto.skin.php" );
require_once( "$IP/skins/Bauhaus/bauhausmedienskins/Bauhausmedienexptv.skin.php" );


// Set the default skin 
$wgDefaultSkin = "bauhausmediawiki";


# Associate each Namespace with its relavent skin name
$wgSkinPerNamespace[BUW_GMU] 		= "bauhausmediawikigmu";
$wgSkinPerNamespace[BUW_GMU_TALK] 	= "bauhausmediawikigmu";
$wgSkinPerNamespace[BUW_IFD] 		= "bauhausmediawikiifd";
$wgSkinPerNamespace[BUW_IFD_TALK] 	= "bauhausmediawikiifd";
$wgSkinPerNamespace[BUW_MODEN] 		= "bauhausmediawikimoden";
$wgSkinPerNamespace[BUW_MODEN_TALK] = "bauhausmediawikimoden";
$wgSkinPerNamespace[BUW_RADIO] 		= "bauhausmediawikiradio";
$wgSkinPerNamespace[BUW_RADIO_TALK] = "bauhausmediawikiradio";
$wgSkinPerNamespace[BUW_FOTO]		= "bauhausmediawikifoto";
$wgSkinPerNamespace[BUW_FOTO_TALK]	= "bauhausmediawikifoto";
$wgSkinPerNamespace[BUW_ME]			= "bauhausmediawikime";
$wgSkinPerNamespace[BUW_ME_TALK]	= "bauhausmediawikime";
$wgSkinPerNamespace[BUW_EXPTV]		= "bauhausmediawikiexptv";
$wgSkinPerNamespace[BUW_EXPTV_TALK]	= "bauhausmediawikiexptv";
$wgSkinPerNamespace[BUW_EKK]		= "bauhausmediawikikk";
$wgSkinPerNamespace[BUW_EKK_TALK]	= "bauhausmediawikikk";
$wgSkinPerNamespace[BUW_MME]		= "bauhausmediawikimme";
$wgSkinPerNamespace[BUW_MME_TALK]	= "bauhausmediawikimme";
$wgSkinPerNamespace[BUW_IMM]		= "bauhausmediawikiimm";
$wgSkinPerNamespace[BUW_IMM_TALK]	= "bauhausmediawikiimm";
$wgSkinPerNamespace[PDCON]			= "bauhausmediawikipdcon";
$wgSkinPerNamespace[PDCON_TALK]		= "bauhausmediawikipdcon";



# mobile fronted view 
$wgMFAutodetectMobileView = true;




################################  Cache Settings ################################
## Shared memory settings
$wgMainCacheType 		= CACHE_NONE;
$wgMemCachedServers 	= array();


## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";


# When you make changes to this configuration file, this will make
# sure that cached pages are cleared.
$wgCacheEpoch 			= max( $wgCacheEpoch, gmdate( 'YmdHis', @filemtime( __FILE__ ) ) );

################################ License Settings ################################

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgEnableCreativeCommonsRdf 	= false;


# Set to the title of a wiki page that describes your license/copyright
$wgRightsPage 					= ""; 
#$wgRightsUrl 					= "";
#$wgRightsText 					= "";
#$wgRightsIcon 					= "";



# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";


################################ User Settings ################################

# restrict editing to registered users
# see http://www.mediawiki.org/wiki/Manual:$wgGroupPermissions
$wgGroupPermissions['*']['createaccount'] 	= true; 	#TEMPORARY EMERGENCY SETTING DUE TO HACKER ATTACK
$wgGroupPermissions['*']['read'] 			= true;
$wgGroupPermissions['*']['edit'] 			= false;
$wgGroupPermissions['*']['createpage'] 		= false;
$wgGroupPermissions['*']['createtalk'] 		= false;
$wgGroupPermissions['*']['upload'] 			= false;
$wgGroupPermissions['user']['edit'] 		= true;
$wgGroupPermissions['user']['createpage'] 	= true;
$wgGroupPermissions['user']['createtalk'] 	= true;
$wgGroupPermissions['user']['upload'] 		= true;
#$wgGroupPermissions['user']['reupload-own'] = true;

#Users should not be able to change the skin preference
$wgHiddenPrefs[] = 'skin';


# Define the priority list i.e. group membership search order.
$bwSidebarSearch = array ('Sysop', 'User', '*' );



################################ Protecting spamming attacks ################################

$wgSpamRegex = "/".                        # The "/" is the opening wrapper
                "s-e-x|zoofilia|sexyongpin|grusskarte|geburtstagskarten|animalsex|".
                "sex-with|dogsex|adultchat|adultlive|camsex|sexcam|livesex|sexchat|".
                "chatsex|onlinesex|adultporn|adultvideo|adultweb.|hardcoresex|hardcoreporn|".
                "teenporn|xxxporn|lesbiansex|livegirl|livenude|livesex|livevideo|camgirl|".
                "spycam|voyeursex|casino-online|online-casino|kontaktlinsen|cheapest-phone|".
                "laser-eye|eye-laser|fuelcellmarket|lasikclinic|cragrats|parishilton|".
                "paris-hilton|paris-tape|2large|fuel-dispenser|fueling-dispenser|huojia|".
                "jinxinghj|telematicsone|telematiksone|a-mortgage|diamondabrasives|".
                "reuterbrook|sex-plugin|sex-zone|lazy-stars|eblja|liuhecai|".
                "buy-viagra|-cialis|-levitra|boy-and-girl-kissing|". # These match spammy words
                "dirare\.com|".           # This matches dirare.com a spammer's domain name
                "overflow\s*:\s*auto|".   # This matches against overflow:auto (regardless of whitespace on either side of the colon)
                "height\s*:\s*[0-4]px|".  # This matches against height:0px (most CSS hidden spam) (regardless of whitespace on either side of the colon)
                "==<center>\[|".          # This matches some recent spam related to starsearchtool.com and friends
                "\<\s*a\s*href|".         # This blocks all href links entirely, forcing wiki syntax
                "display\s*:\s*none".     # This matches against display:none (regardless of whitespace on either side of the colon)
                "/i";                     # The "/" ends the regular expression and the "i" switch which follows makes the test case-insensitive
                                          # The "\s" matches whitespace
                                          # The "*" is a repeater (zero or more times)
                                          # The "\s*" means to look for 0 or more amount of whitespace


##################################### UserThrottle Settings #################
$wgGlobalAccountCreationThrottle = array(
    'min_interval' => 5, // Hard minimum time between creations
    'soft_time' => 300, // Timeout for rolling count
    'soft_limit' => 10, // 10 registrations in five minutes
);


##################################### PDF handler ###########################
$wgPdfProcessor = 'gs';
$wgPdfPostProcessor = $wgImageMagickConvertCommand;
$wgPdfInfo = 'pdfinfo';
$wgImageMagickConvertCommand = "/usr/bin/convert";



################################ Fancy thumbs ################################
$fbtFancyBoxOptions = '{"openEffect":"elastic","closeEffect":"elastic","helpers":{"title":{"type":"inside"}}}';


# msUpload
$wgMSU_showAutoCat = true;

################################# pdf embed ###################################
//Default width for the PDF object container.
$pdfEmbed['width'] = 800;

//Default height for the PDF object container.
$pdfEmbed['height'] = 1090;


################################ Other Settings ################################

$wgShellLocale 		= "en_US.utf8";

# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode 	= "en";

# favicon
$wgFavicon 			= "$wgScriptPath/skins/Bauhaus/site/favicon_m.ico";

# Parser Functions
$wgPFEnableStringFunctions = true;


